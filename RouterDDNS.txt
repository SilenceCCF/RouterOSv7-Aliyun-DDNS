# RouterOS DDNS Script for Aliyun
# 采用 V7 版脚本编写。
# 使用简化的 DDNS专用 PHP 代理转发数据请示，也可使用其它语言编写的 代理。

# --- 用户配置 ---
# PHP 转发代理的 URL
:local phpProxyUrl "https://MyPHPProxy.com/routeros/aliyun-ddns.php";
# 阿里云的 AccessKey
:local akId "LTAxxxxxxxx";
:local akSecret "xxxxxxx";
:local header "Content-Type:application/json";
# securityToken 为用户自定义的安全令牌，可防止 PHP 代理被滥用，应与 PHP 代理中设置的一致。
:local securityToken "Any_Random_String_8848!";
# 调用钉钉发送通知（可选）
:local dingtalk "https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxx";
:local keyword "[routeros]";
# DDNS 域名配置
:local domainToUpdate "test.demo.com"; 
:local recordType "A"; 
# 获取 公网IP模式。1：由 pppoe 拨号接口获取。2：由 4.ipw.cn 网站返回。
:local getWanIpMode 1;
# 模式 1 时指定公网接口。
:local wan "pppoe-out1";
# 模式 2 时指定查询网站。查询 IPV6 可使用 https://6.ipw.cn 
:local site "https://4.ipw.cn"
# --- 用户配置结束 ---

# --- 1. 获取当前公网IP  ---
:log info "查询当前公网 IP...";
:local currentIp ""; 
:if ($getWanIpMode=1) do={
    :log info "查询路由器 $wan 接口 IP...";
    :do {
	  :local Ip  [/ip address get [find interface=$wan] address];
	  # 去除掩码
	  :set currentIp [:pick $Ip 0 [:find $Ip "/"]];  
     } on-error={:log error "$wan 接口错误。"};  
} else={
	:if ($getWanIpMode=2) do={
      :log info "查询 $site 网站...";
	  :do {
	    :local fetchResult [/tool fetch url=$site as-value output=user];
	    :if (($fetchResult->"status") != "finished") do={
	    :log error ("Fetch 命令失败，状态：" . ($fetchResult->"status"));
        } else={:set currentIp ($fetchResult->"data");} 
      } on-error={:log error "查询 $site 网站错误。"};
    }  
}
:if ([:len $currentIp] > 0) do={
  :log info "当前公网 IP：$currentIp";
  # --- 2. 查询域名当前解析信息 ---
  :log info "查询域名 $domainToUpdate 当前的解析记录...";
  :local queryUrl "$phpProxyUrl?";
  :set queryUrl ($queryUrl . "AccessKeyId=$akId");
  :set queryUrl ($queryUrl . "&AccessKeySecret=$akSecret");
  :set queryUrl ($queryUrl . "&task=query");
  :set queryUrl ($queryUrl . "&domainName=$domainToUpdate");
  :set queryUrl ($queryUrl . "&recordType=$recordType");
  :set queryUrl ($queryUrl . "&security_Token=$securityToken");
  :do {
    :local queryResult [/tool fetch url=$queryUrl as-value output=user];
    :if (($queryResult->"status") = "finished") do={
      :local responseString ($queryResult->"data");
      # --- 3. 解析结果 ---
      # :log info ("接收到的响应数据：" . $responseString);
      :if ([:find $responseString "\"TotalCount\":0"] > 0) do={
        :log error ("从 API 服务器收到错误或意外响应。查询域名解析失败，状态： " . ($queryResult->"status") . ", 数据： " . ($queryResult->"data"));
        :log error "未查询到域名'$domainToUpdate 的 '$recordType' 类型解析记录。";
      } else={
           :local recordId;
           :local recordValue;
           :local recordRR;
           :local start [:find $responseString "\"RecordId\":\""];
           :if ($start != 0) do={ :set start ($start + 12); :local end [:find $responseString "\"" $start]; :set recordId [:pick $responseString $start $end]; }
           :set start [:find $responseString "\"Value\":\""];
           :if ($start != 0) do={ :set start ($start + 9); :local end [:find $responseString "\"" $start]; :set recordValue [:pick $responseString $start $end]; }
           :set start [:find $responseString "\"RR\":\""];
           :if ($start != 0) do={ :set start ($start + 6); :local end [:find $responseString "\"" $start]; :set recordRR [:pick $responseString $start $end]; }
           # :log info "解析后的字符串 -> RecordID: $recordId, Value: $recordValue, RR: $recordRR";
           :if ([:len $recordId] > 0 and [:len $recordValue] > 0 and [:len $recordRR] > 0) do={
             # --- 4. 比较并更新IP ---
             :if ($recordValue = $currentIp) do={
               :log info "IP 地址相同，无须更新 ($currentIp)。";
             } else={
               :log info "IP地址由 $recordValue 变更为 $currentIp，开始更新解析记录...";  
               :local updateUrl "$phpProxyUrl?";
               :set updateUrl ($updateUrl . "AccessKeyId=$akId");
               :set updateUrl ($updateUrl . "&AccessKeySecret=$akSecret");
               :set updateUrl ($updateUrl . "&task=update");
               :set updateUrl ($updateUrl . "&recordId=$recordId");
               :set updateUrl ($updateUrl . "&rr=$recordRR");
               :set updateUrl ($updateUrl . "&newIp=$currentIp");
               :set updateUrl ($updateUrl . "&recordType=$recordType");
               :set updateUrl ($updateUrl . "&security_Token=$securityToken");
               do {
                 :local updateFetchResult [/tool fetch url=$updateUrl as-value output=user];
                 :if (($updateFetchResult->"status") != "finished") do={
                   :log error (" fetch 命令失败，状态：" . ($updateFetchResult->"status"));
                 } else={
                   :local updateResultString ($updateFetchResult->"data");
                   :local searchPattern ("\"RecordId\":\"" . $recordId);        
                   :if ([:find $updateResultString $searchPattern] > 0) do={
                     :log info "DNS 解析记录更新成功，新的 IP 地址是 $currentIp。";
                     :local data "{\"msgtype\":\"text\",\"text\": {\"content\":\"公网 IP 地址由  $recordValue 变更为 $currentIp。$keyword\"}}";
                     # --- 5. 发送钉钉消息，可选。---
                     do {
                       :log info [/tool/fetch http-method=post mode=https http-header-field="$header" http-data="$data" url="$dingtalk"];
                     } on-error={log error "发送钉钉消息失败。"}
                     # ---钉钉消息部分结束---
                   } else={
                     :log error ("无法更新 DNS 解析记录。原因： " . $updateResultString);                    
                   }
                 }
               } on-error={:log error "Fetch 命令修改解析失败。"}
             }  
           } else={:log error "从响应数据中解析值失败。";}
      }	   
   }  
  } on-error={:log error "Fetch 命令查询解析失败。"};
} else={:log error "获取当前公网 IP 失败，返回数据为空。";}
